const mongoose = require('mongoose');

const newUserSchema = new mongoose.Schema({
    status: { type: String, default: 'NEW_ACCOUNT' },
    membershipPlan: { type: String },
    numberOfContacts: { type: Number, default: 0 },
    activationDate: { type: Number },
    expiryDate: { type: Number },
    lastSeen: { type: Number },
    userId: { type: String, unique: true, required: true },
    name: { type: String, required: true },
    phone: { type: String, required: true },
    country: { type: String },
    state: { type: String },
    city: { type: String },
    profileCreatedFor: { type: String },
    profilePictureUrls: { type: [String] },
    gender: { type: String },
    religion: { type: String },
    caste: { type: String },
    subCaste: { type: String },
    maritalStatus: { type: String },
    dateOfBirth: { type: String },
    age: { type: Number },
    email: { type: String },
    password: { type: String },
    referByName: { type: String },
    aboutMe: { type: String },
    education: { type: String },
    educationDetails: { type: String },
    employedIn: { type: String },
    occupation: { type: String },
    occupationDetails: { type: String },
    annualIncome: { type: String },
    incomeType: { type: String },
    anyOtherSourceIncome: { type: String },
    workingHours: { type: String },
    workingLocationCity: { type: String },
    workingExperience: { type: String },
    workingExperienceDetails: { type: String },
    lookingFor: { type: String },
    partnerAgeRange: { type: String },
    partnerHeightRange: { type: String },
    partnerIncomeRange: { type: String },
    partnerComplexion: { type: String },
    partnerDiet: { type: String },
    expectedEducation: { type: String },
    partnerOccupation: { type: String },
    partnerReligion: { type: String },
    partnerCaste: { type: String },
    partnerSubCaste: { type: String },
    readyToMarryInSameCaste: { type: String },
    partnerCountryLivingIn: { type: String },
    partnerState: { type: String },
    preferredWorkingCities: { type: String },
    preferredNativeCities: { type: String },
    partnerExpectations: { type: String },
    familyValues: { type: String },
    familyType: { type: String },
    familyStatus: { type: String },
    motherTongue: { type: String },
    numberOfBrothers: { type: String },
    numberOfSisters: { type: String },
    numberOfBrothersMarried: { type: String },
    numberOfSistersMarried: { type: String },
    fatherName: { type: String },
    fatherOccupation: { type: String },
    fatherAlive: { type: String },
    motherName: { type: String },
    motherOccupation: { type: String },
    motherAlive: { type: String },
    parentsStay: { type: String },
    nativeCountry: { type: String },
    nativeState: { type: String },
    nativeDistrict: { type: String },
    nativeCity: { type: String },
    currentCountry: { type: String },
    currentState: { type: String },
    currentDistrict: { type: String },
    currentCity: { type: String },
    mamaName: { type: String },
    mamaCity: { type: String },
    familyWealth: { type: String },
    familyWealthDetails: { type: String },
    surnamesOfRelatives: { type: String },
    aboutFamily: { type: String },
    numberOfChildrenGirl: { type: String },
    numberOfChildrenBoy: { type: String },
    childrenLivingStatus: { type: String },
    address: { type: String },
    contactCountry: { type: String },
    contactState: { type: String },
    contactDistrict: { type: String },
    contactCity: { type: String },
    alternatePhone: { type: String },
    mobile: { type: String },
    whatsappNo: { type: String },
    height: { type: String },
    weight: { type: Number },
    bloodGroup: { type: String },
    complexion: { type: String },
    bodyType: { type: String },
    diet: { type: String },
    anyAchievement: { type: String },
    medicalHistory: { type: String },
    specialCases: { type: String },
    doYouHavePassport: { type: String },
    cardType: { type: String },
    moonsign: { type: String },
    star: { type: String },
    gotra: { type: String },
    devak: { type: String },
    manglik: { type: String },
    shani: { type: String },
    gan: { type: String },
    nadi: { type: String },
    charan: { type: String },
    horoscopeMatch: { type: String },
    placeOfBirth: { type: String },
    birthCountry: { type: String },
    timeOfBirth: { type: String },
    hobbies: { type: String },
    interests: { type: String },
    isProfileBlur: { type: Boolean },
    isHoroscopeVisible: { type: Boolean },
    isRequestProfile: { type: Boolean },
    
});

const NewUser = mongoose.model('user', newUserSchema);

module.exports = { NewUser };
